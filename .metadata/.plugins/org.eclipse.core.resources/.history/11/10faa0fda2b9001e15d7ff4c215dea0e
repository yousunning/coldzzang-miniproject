package food.web;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.apache.tomcat.jni.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;


import food.service.FoodDTO;
import food.service.FoodService;


@Controller
public class RecipeController { //이 클래스는 SpringMVC컨트롤러로 표시되어 있습니다.
	
	@Autowired 
	private FoodService foodService; // 이는 FoodService 클래스의 빈을 컨트롤러에 주입한다.
	
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String main(Model model, HttpSession session) {
							//메인페이지 매핑
		return "mainpage"; //이 메서드는 루트경로("/")에 대한 HTTP GET 요청을 처리하고
	// 뷰 이름 "mainpage"를 반환합니다. Model 및 HttpSession 을 매개변수로 사용합니다.
	
	@RequestMapping("/food/List/1") // 음식 목록 매핑
	public String getFoodList(@PathVariable String page,@ModelAttribute("foodDTO") FoodDTO foodDTO, Model model, HttpSession session) {
		List<FoodDTO> list = foodService.list(foodDTO);
		model.addAttribute("resultList", list);
		return "food/List"; 	
		//이 메서드는 "/FoodService"에서 "FoodDTO" 객체 목록을 가져와 "resultList"로 모델에 추가하고
		//"food/List"라는 뷰이름을 반환합니다.
		
		//FoodDTO 클래스는 음식과 관련된 데이터를 캡슐화하는 데 사용되는 데이터 전송 객체
		//FoodService 클래스는 음식과 관련된 비즈니스 로직을 처리하는 데 사용
	